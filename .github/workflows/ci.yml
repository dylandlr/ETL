name: CI

on:
  pull_request:
    branches: [ main ]
    paths:
      - 'azure/**'
      - '.github/workflows/**'
  workflow_dispatch:

env:
  PYTHON_VERSION: '3.9'
  TERRAFORM_VERSION: '1.0.0'

permissions:
  contents: read
  pull-requests: write

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r azure/tests/requirements-test.txt
        
    - name: Run tests
      run: |
        pytest azure/tests/unit -v --cov=azure/src --cov-report=xml
        
    - name: Upload coverage report
      uses: actions/upload-artifact@v3
      with:
        name: coverage-report
        path: coverage.xml

  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 black isort
        
    - name: Check formatting
      run: |
        black --check azure
        isort --check-only azure
        
    - name: Lint with flake8
      run: |
        flake8 azure --count --max-complexity=10 --max-line-length=100 --statistics

  validate-terraform:
    name: Validate Terraform
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: ${{ env.TERRAFORM_VERSION }}
        
    - name: Terraform Format
      run: |
        cd azure/infrastructure
        terraform fmt -check -recursive
        
    - name: Terraform Init
      run: |
        cd azure/infrastructure/environments/dev
        terraform init -backend=false
        
    - name: Terraform Validate
      run: |
        cd azure/infrastructure/environments/dev
        terraform validate

  validate-data-factory:
    name: Validate Data Factory
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Validate ARM Template
      run: |
        test -f azure/src/data-factory/ARMTemplateForFactory.json
        test -f azure/src/data-factory/ARMTemplateParametersForFactory.json
        
    - name: Check JSON format
      run: |
        jq empty azure/src/data-factory/ARMTemplateForFactory.json
        jq empty azure/src/data-factory/ARMTemplateParametersForFactory.json
